# ---
# note to do

# 1
# finish the look of mako notifications and it should run on main monitor

# 2
# configure wacom tablet settings and test with krita

# 2
# get flameshot working
# *** I tried to get flameshot working but this is currently a dumpsterfire of
# workarounds on wayland, never worked for me, at this point it is a waste of
# but I do want to try again in the future
# flameshot has a simple and inituitive GUI with various editing tools.
# swappy is another tool (written in C, uses GTK and Pango) that pops up a 
# GUI and allows basic operations on the screenshot such as adding text, 
# arrows, circles, squares and choosing colors. Has a config file to customize 
# the GUI. Can also work without grim.

# note
# notification creator
# https://github.com/elkowar/eww?tab=readme-ov-file

# note
# if for some reason you need something more than xdg-open to view images
# image viewer with sway and tmux support builtin
# https://github.com/jstkdng/ueberzugpp

# note
# https://hg.sr.ht/~scoopta/glpaper background imgs that are glsl renders

# note
# look into setting up a keybind to lock the screen
# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.
#
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# note
# if you need to configure wifi on this system just use nmcli

# note look into these options
# bemenu works as a dmenu replacement.
# sway-launcher-desktop: TUI Application launcher with Desktop Entry support.
# wofi is a rofi-like launcher.
# yofi is a minimalistic menu for wayland.
# tofi is an extremely performant wlroots-specific launcher.
# Also, see https://github.com/swaywm/sway/wiki/Useful-add-ons-for-sway for more ideas.

# autostart is configured in ~/.bash_profile

# ---
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1

# set display variables
set $display1       "BNQ BenQ GL2460 K2E02884SL0"
set $display2       "Wacom Tech Cintiq 16 9KW00X1000364"

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:BitstreamWeraNerdFont-Regular 14


# rebind capslock to escape
input "type:keyboard" {
    xkb_options caps:swapescape
}

input "1386:912:Wacom_Cintiq_16_Pen" {
        map_to_output $display2
}

# set display options
# Run swaymsg -t get_outputs to get a list of output names. Then use the output 
# command to arrange your displays.

output $display1 {
   # ...config options...
   mode 1920x1080@60.000Hz
   # pos 0 0
   # scale 1.3
   bg #faf4ed solid_color
   # bg /home/dev/casa/work/background-images/ghost.jpg fill
}

output $display2 {
   # ...config options...
   mode 1920x1080@60.000Hz
   # pos 0 1920
   bg #faf4ed solid_color
   # bg /home/dev/casa/work/background-images/ghost.jpg fill
}

# ensure main monitor is focused on launch but not on reload
# exec swaymsg focus output $display1

# BUG: system is defaulting to workspace 2 for some reason
# set focus to workspace 2 on startup
exec swaymsg workspace 3

# enable notification prompts for polkit to start qemu
exec mako

# remove title borders
default_border none

# assign apps to specific layouts
# assign [app_id="anki"]     workspace 1:music
# exec anki
assign [app_id="kitty"]    workspace 3:terminal
exec kitty
assign [app_id="nyxt"]  workspace 4:browser
exec nyxt
for_window [class="FreeTube"] move to workspace 5:video
exec freetube

#set default workspace_layout to tabbed
workspace_layout tabbed

workspace 1 output $display2
workspace 2 output $display1
workspace 3 output $display1
workspace 4 output $display1
workspace 5 output $display1
workspace 6 output $display1
workspace 7 output $display1
workspace 8 output $display1
workspace 9 output $display1
workspace 10 output $display1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | wmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /run/current-system/sw/share/backgrounds/sway/)
# output * bg /run/current-system/sw/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    # bindsym $mod+d exec $menu
    bindsym $mod+D exec dmenu-wl_run -i

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    # bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Flameshot
#
    # dumpster fire ahead
    # workaround for getting flameshot to work on wayland
    # exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
    # exec hash dbus-update-activation-environment 2>/dev/null && \
    #     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

    # ensures flameshot is positioned correctly on multimonitor setups
    # for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0

    # screenshot with flamshot gui
    # bindsym Ctrl+P exec flameshot gui


# Status Bar:

# Read `man 5 sway-bar` for more information about this section.
bar {
   # swaybar_command waybar
     position bottom
     # hidden_state hide
     # mode hide

     # When the status_command prints a new line to stdout, swaybar updates.
     # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %X'; do sleep 1; done
    status_command while ~/.config/sway/statusbar; do sleep 1; done

     colors {
         statusline #ffffff
         background #323232
         inactive_workspace #32323200 #32323200 #5c5c5c
     }
}

# bindsym $mod+p       exec grimshot save active
# bindsym $mod+Shift+p exec grimshot save area
# bindsym $mod+Ctrl+p  exec grimshot save window

include /etc/sway/config.d/*
include ~/.config/sway/rose-pine-theme
# exec waybar
